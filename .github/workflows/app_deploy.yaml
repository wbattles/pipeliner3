name: App Deployment Workflow

on:
  push:
    branches:
      - dev
    paths:
      - 'application/**'

permissions:
  id-token: write
  contents: read

jobs:
  application:
    name: App deploy
    runs-on: ubuntu-latest
    defaults:
     run:
      working-directory: ./application

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Retrieve EC2 Instance IP
        run: |
          IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ vars.INSTANCE_NAME }}" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "::add-mask::$IP"
          echo "INSTANCE_IP=$IP" >> $GITHUB_ENV

      - name: Deploy via SSM
        run: |
          # Send the deployment script to the instance
          aws ssm send-command \
            --instance-ids ${{ env.INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'cat > /home/ubuntu/deploy.sh << \"EOL\"',
              '$(cat ../scripts/deploy.sh)',
              'EOL',
              'chmod +x /home/ubuntu/deploy.sh',
              'export AWS_DEFAULT_REGION=us-east-1',
              'export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}', 
              'export ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}',
              'bash /home/ubuntu/deploy.sh'
            ]" \
            --output text