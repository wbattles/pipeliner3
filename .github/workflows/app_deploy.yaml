name: App Deployment Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'application/**'

permissions:
  id-token: write
  contents: read

jobs:
  application:
    name: App deploy
    runs-on: ubuntu-latest
    defaults:
     run:
      working-directory: ./application

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Retrieve EC2 Instance IP
        run: |
          IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ vars.INSTANCE_NAME }}" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "::add-mask::$IP"
          echo "INSTANCE_IP=$IP" >> $GITHUB_ENV

      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.SSH_SECRET_KEY }}" > ssh_key.pem
          chmod 600 ssh_key.pem

      - name: Copy deployment script
        run: |
          scp -o StrictHostKeyChecking=no -i ssh_key.pem ../scripts/deploy.sh ubuntu@${{ env.INSTANCE_IP }}:~/deploy.sh

      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@${{ env.INSTANCE_IP }} \
            "chmod +x ~/deploy.sh && 
            export AWS_DEFAULT_REGION=us-east-1 && 
            export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} && 
            export ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }} && 
            bash ~/deploy.sh"